<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ej.hgj.dao.hu.CstIntoHouseDaoMapper">

    <resultMap id="BaseMap" type="com.ej.hgj.entity.hu.CstIntoHouse">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="cst_into_id" jdbcType="VARCHAR" property="cstIntoId"/>
        <result column="house_id" jdbcType="VARCHAR" property="houseId"/>
        <result column="into_status" jdbcType="INTEGER" property="intoStatus"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag"/>
    </resultMap>
    <sql id="Base_Column_List" >
        id, cst_into_id, house_id, into_status, create_time, update_time, create_by,
        update_by, delete_flag
    </sql>

    <!-- 根据主键查询-->
    <select id="getById" resultMap="BaseMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from t_cst_into_house
        where id = #{id}
    </select>

    <!-- 根据入住ID查询-->
    <select id="getByCstIntoId" resultMap="BaseMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from t_cst_into_house
        where cst_into_id = #{cstIntoId}
    </select>

    <!-- 根据入住ID和转态查询-->
    <select id="getByCstIntoIdAndIntoStatus" resultMap="BaseMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from t_cst_into_house
        where cst_into_id = #{cstIntoId} and into_status in(1,3)
    </select>

    <!-- 根据微信号查询-->
    <select id="getByWxOpenId" resultMap="BaseMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from t_cst_into_house h inner join t_cst_into c on h.cst_into_id = c.id
        where h.delete_flag = 0
          and c.delete_flag = 0
          and c.into_status in(1,3)
          and h.into_status in(1,3)
          and c.wx_open_id = #{wxOpenId}
    </select>

    <!-- 根据客户号查询-->
    <select id="getByCstCode" resultMap="BaseMap" parameterType="java.lang.String" >
        select
        h.*
        from t_cst_into_house h inner join t_cst_into c on h.cst_into_id = c.id
        where h.delete_flag = 0
        and c.delete_flag = 0
        and c.into_status in(1)
        and h.into_status in(1)
        and c.cst_Code = #{CstCode}
    </select>

    <!-- 查询列表-->
    <select id="getList" resultMap="BaseMap"  parameterType="com.ej.hgj.entity.hu.CstInto">
        SELECT
            c.*, s.cst_name,
            pc.project_name,
            h.res_name
        FROM
            t_cst_into c
        LEFT JOIN s_cst s ON s.`code` = c.cst_code
        LEFT JOIN t_pro_config pc ON pc.project_num = s.org_id
        LEFT JOIN s_house h on h.id = c.house_id
        WHERE c.delete_flag = 0
        <if test="projectNum != null and projectNum != ''">
            and pc.project_num = #{projectNum}
        </if>
        <if test="cstName != null">
            and s.cst_name like CONCAT('%', #{cstName,jdbcType=VARCHAR},'%') ESCAPE '/'
        </if>
        <if test="userName != null">
            and c.user_name like CONCAT('%', #{userName,jdbcType=VARCHAR},'%') ESCAPE '/'
        </if>
        <if test="intoRole != null">
            and c.into_role = #{intoRole}
        </if>
        <if test="intoStatus != null">
            and c.into_status = #{intoStatus}
        </if>
        <if test="cstCode != null">
            and c.cst_code = #{cstCode}
        </if>
        order by c.update_time desc
    </select>

    <insert id="insertList" parameterType="java.util.List">
        insert into t_cst_into_house (
        id, cst_into_id, house_id, into_status, create_time, update_time, delete_flag
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id,jdbcType=VARCHAR},
            #{item.cstIntoId,jdbcType=VARCHAR},
            #{item.houseId,jdbcType=VARCHAR},
            #{item.intoStatus,jdbcType=INTEGER},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.deleteFlag,jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <!-- 保存-->
    <insert id="save" parameterType="com.ej.hgj.entity.hu.CstIntoHouse" >
        insert into  t_cst_into_house(
        <if test="id != null">
            id,
        </if>
        <if test="projectNum != null">
            project_num,
        </if>
        <if test="wxOpenId != null">
            wx_open_id,
        </if>
        <if test="userName != null">
            user_name,
        </if>
        <if test="cstCode != null">
            cst_code,
        </if>
        <if test="houseId != null">
            house_id,
        </if>
        <if test="intoRole != null">
            into_role,
        </if>
        <if test="intoStatus != null">
            into_status,
        </if>
        <if test="createTime != null">
            create_time,
        </if>
        <if test="createBy != null">
            create_by,
        </if>
        <if test="updateTime != null">
            update_time,
        </if>
        <if test="updateBy != null">
            update_by,
        </if>
        <if test="deleteFlag != null">
            delete_flag
        </if>
        )
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="projectNum != null" >
                #{projectNum,jdbcType=VARCHAR},
            </if>
            <if test="wxOpenId != null" >
                #{wxOpenId,jdbcType=VARCHAR},
            </if>
            <if test="userName != null" >
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="cstCode != null" >
                #{cstCode,jdbcType=VARCHAR},
            </if>
            <if test="houseId != null" >
                #{houseId,jdbcType=VARCHAR},
            </if>
            <if test="intoRole != null" >
                #{intoRole,jdbcType=INTEGER},
            </if>
            <if test="intoStatus != null" >
                #{intoStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=INTEGER}
            </if>
        </trim>
    </insert>

    <!-- 更新-->
    <update id="updateByCstIntoId" parameterType="com.ej.hgj.entity.hu.CstIntoHouse" >
        update
        t_cst_into_house
        <set>
            <if test="intoStatus != null">
                into_status = #{intoStatus,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where cst_into_id = #{cstIntoId,jdbcType=VARCHAR}
    </update>

    <!-- 更新-->
    <update id="updateById" parameterType="com.ej.hgj.entity.hu.CstIntoHouse" >
        update
        t_cst_into_house
        <set>
            <if test="intoStatus != null">
                into_status = #{intoStatus,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <!-- 逻辑删除-->
    <update id="delete" parameterType="java.lang.String" >
        update t_cst_into_house set delete_flag = 1 ,update_time = NOW() where id=#{id,jdbcType=VARCHAR}
    </update>

    <!-- 根据入住编号逻辑删除-->
    <update id="deleteByCstIntoId" parameterType="java.lang.String" >
        update t_cst_into_house set delete_flag = 1 ,update_time = NOW() where cst_into_id=#{cstIntoId,jdbcType=VARCHAR}
    </update>

    <!-- 根据微信号客户号删除-->
    <update id="deleteByCstCodeAndWxOpenId" parameterType="java.lang.String" >
        update
            t_cst_into_house
        set delete_flag = 1 , update_time = NOW()
        where cst_code=#{cstCode,jdbcType=VARCHAR}
          and wx_open_id=#{wxOpenId,jdbcType=VARCHAR}
    </update>

</mapper>
